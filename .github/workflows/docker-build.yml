name: Build Server

on:
  push:
    tags:
      - "v*"  # 触发标签推送

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 确保获取所有历史记录和标签

      - name: Cache turbo build setup
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-

      - name: Install dependencies if cache missed
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies if cache missed
        run: |
          bun install
          bun --bun run build
          ls

      - name: List files
        run: |
          pwd
          ls -alh

      - name: Upload Build
        uses: actions/upload-artifact@v4
        with:
          name: Builder
          path: |
            apps/backend/dist/*
            /home/runner/work/test-ACTION/test-ACTION/Dockerfile
  

  Build-Docker:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Create buildx cache directory
        run: |
          mkdir -p /tmp/.buildx-cache  # 确保缓存目录存在

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Builder
          path: build

      - name: Build Docker image
        run: |
          ls
          docker buildx build --platform linux/amd64,linux/arm64 -t ghcr.io/${{ secrets.DOCKER_USERNAME }}/hetu:latest --push -f ./Dockerfile .

  Push-ghcr:
    needs: Build-Docker
    runs-on: ubuntu-latest
    steps:
      - name: Log in to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Tag old version
        run: |
          previous_tag=$(git describe --tags --abbrev=0 HEAD^)
            echo "Previous tag: $previous_tag"
            old_version=$(docker pull ghcr.io/${{ secrets.DOCKER_USERNAME }}/hetu:latest || echo "")
            if [ -n "$old_version" ]; then
              # Here you can decide how you want to compute the version, for now, using a simple v*.*
              version="$previous_tag"  # You can compute this dynamically or use commit hashes
              docker tag ghcr.io/${{ secrets.DOCKER_USERNAME }}/hetu:latest ghcr.io/${{ secrets.DOCKER_USERNAME }}/hetu:$version
              docker push ghcr.io/${{ secrets.DOCKER_USERNAME }}/hetu:$version
            fi
      
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/hetu:latest